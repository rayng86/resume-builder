{"version":3,"sources":["Components/ResumeSubHeader.tsx","Components/ResumeSkillsComponent.tsx","Components/ResumeProfessionalExperience.tsx","Components/ResumeHeaderProfileComponent.tsx","Components/ResumePreviewComponent.tsx","constants.ts","RenderResumeConfigProps.tsx","Components/EditSkills.tsx","Components/Wrappers.tsx","Components/EditProfessionalExperience.tsx","Components/EditHeaderProfile.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ResumeSubHeader","label","style","marginBottom","fontWeight","textTransform","margin","className","ResumeSkillsComponent","skills","_","map","skill","name","ResumeProfessionalExperience","professionalExperiences","exp","borderBottom","jobPosition","company","display","startDate","endDate","description","HeaderProfile","firstName","middleName","lastName","jobTitle","size","ResumePreview","rest","INITIAL_VALUES","RenderResumeConfig","config","codeString","JSON","stringify","language","tomorrowNightEighties","showLineNumbers","SkillsChip","onClick","removable","consolidatedSkillsSet","concat","SelectSkillsInput","state","filteredSkills","updateFilteredSkills","selectedSkills","setState","filter","indexOf","addSkill","_suggestion","index","matches","uniqBy","props","setSkills","removeSkill","slice","splice","this","key","data","dataLabel","dataValue","onAutocomplete","clearOnAutocomplete","deleteKeys","Component","EditSkills","footer","TextFieldWrapper","value","func","lineDirection","onChange","DatePickerWrapper","id","inline","EditProfessionalExperience","myExperienceList","removeExperience","addExperience","setExperience","myExperienceListSize","up","newList","arrayMove","down","width","primaryText","ExperienceItem","disabledReordering","rightIcon","secondary","disabled","forceFontSize","secondaryText","AddExperienceForm","useState","setJobPosition","setCompany","setDescription","setStartDate","setEndDate","padding","dateString","rows","maxLength","flat","primary","swapTheming","event","preventDefault","EditHeaderProfile","setFirstNameState","setMiddleName","setLastName","setJobTitle","Main","resume","useRef","pdfFileName","setExperiences","resumeConfig","title","subtitle","newExperience","updatedJobExperienceList","save","element","document","createElement","jsonObjStr","d","Date","dateStr","getDay","getDate","getFullYear","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","border","height","paperSize","fileName","subject","keywords","ref","r","fontFamily","backgroundColor","overflowX","overflowY","App","drawerTitle","Boolean","window","location","hostname","match","WebFontLoader","load","google","families","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29c6295d.chunk.js","sourcesContent":["import React from 'react';\n\ntype ResumeSubHeaderProps = {\n  label: string;\n};\n\nexport const ResumeSubHeader = ({ label }: ResumeSubHeaderProps) => (\n  <div style={{ marginBottom: '20px' }}>\n    <h2 style={{ fontWeight: 500, textTransform: 'uppercase', margin: 0 }}>{label}</h2>\n    <div className=\"md-divider-border md-divider-border--top\" />\n  </div>\n);\n","import _ from 'lodash';\nimport React from 'react';\nimport { Chip } from 'react-md';\nimport { ResumeSkillsComponentProps } from './../types';\nimport { ResumeSubHeader } from './ResumeSubHeader';\n\nexport const ResumeSkillsComponent = ({ skills }: ResumeSkillsComponentProps) => (\n  <div>\n    <ResumeSubHeader label=\"Skills\" />\n    {_.map(skills, skill => <Chip className=\"resume-chip\" label={skill.name} />)}\n  </div>\n);\n","import _ from \"lodash\";\nimport React from 'react';\nimport { FontIcon } from \"react-md\";\nimport { ResumeSubHeader } from \"./ResumeSubHeader\";\nimport { ProfessionalExperienceType } from '../types';\n\ntype ResumeProfessionalExperienceProps = {\n  professionalExperiences: Array<ProfessionalExperienceType>,\n};\n\nexport const ResumeProfessionalExperience = ({ professionalExperiences } : ResumeProfessionalExperienceProps) => (\n  <>\n    <ResumeSubHeader label=\"Professional Experience\" />\n    {_.map(professionalExperiences, (exp) => (\n      <div style={{ borderBottom: '1px dashed rgba(117, 117, 117, 0.12)' }}>\n        <h3 style={{ marginBottom: 0 }}>{exp.jobPosition}</h3>\n        <p>{exp.company}</p>\n        <p style={{ display: 'flex' }}>\n          {exp.startDate} - {exp.endDate ? exp.endDate : 'Present'}\n        </p>\n        <p>{exp.description}</p>\n      </div>\n    ))}\n  </>\n);\n","import React from 'react';\nimport { Cell } from 'react-md';\nimport { HeaderProfileProps } from '../types';\n\nconst HeaderProfile = ({ firstName, middleName, lastName, jobTitle } : HeaderProfileProps) => (\n  <Cell size={12}>\n    <h1>{firstName} {middleName} {lastName}</h1>\n    <span>{jobTitle}</span>\n  </Cell>\n);\n\nexport default HeaderProfile;\n","import React from 'react';\nimport { ResumeProps } from '../types';\nimport { Grid, Cell } from 'react-md';\nimport { ResumeSkillsComponent } from './ResumeSkillsComponent';\nimport { ResumeProfessionalExperience } from './ResumeProfessionalExperience';\nimport HeaderProfile from './ResumeHeaderProfileComponent';\n\nexport const ResumePreview = ({ ...rest }: ResumeProps) => (\n  <Grid className=\"resume-container\">\n    <HeaderProfile {...rest} />\n    <Cell size={8}>\n      <ResumeProfessionalExperience professionalExperiences={rest.professionalExperiences} />\n    </Cell>\n    <Cell size={4}>\n      <ResumeSkillsComponent skills={rest.skills} />\n    </Cell>\n  </Grid>\n);\n","import { ResumeProps } from './types';\n\nexport const INITIAL_VALUES: ResumeProps = {\n  firstName: 'Raymond',\n  middleName: '',\n  lastName: 'Ng',\n  jobTitle: 'Software Engineer',\n  professionalExperiences: [{\n    jobPosition: 'Software Engineer',\n    company: 'Google',\n    startDate: '11/05/2020',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n  }],\n  skills: [{ name: 'JavaScript' }],\n};\n\nexport const PROGRAMMING_SOFTWARES = [\n  { name: 'Adobe Photoshop' },\n  { name: 'Adobe Creative Suite' },\n  { name: 'Microsoft Word' },\n  { name: 'Microsoft Excel' },\n  { name: 'Terminal' },\n  { name: 'Sketch' },\n  { name: 'Zeplin' },\n];\n\nexport const PROCEDURAL_EXTENSIONS = [\n  { name: 'MariaDB' },\n  { name: 'MySQL' },\n  { name: 'PostgresSQL' },\n];\n\nexport const FRAMEWORKS = [\n  { name: 'Node.JS' },\n  { name: 'React' },\n  { name: 'ReactNative' },\n  { name: 'Redux' },\n  { name: 'AngularJS' },\n  { name: 'VueJS' },\n  { name: 'SocketIO' },\n  { name: 'NestJS' },\n  { name: 'ExpressJS' },\n  { name: 'SailsJS' },\n  { name: 'Koa.JS' },\n  { name: 'LoopBack' },\n  { name: 'Derby.JS' },\n  { name: 'Mean.io' },\n  { name: 'Restify.Js' },\n];\n\nexport const OTHER = [\n  { name: 'Web Design' },\n  { name: 'Responsive Web Design' },\n  { name: 'Mobile' },\n  { name: 'RESTFUL API' },\n  { name: 'REST' },\n];\n\nexport const PROGRAMMING_LANGUAGES = [\n  { name: 'A Sharp (.NET)' },\n  { name: 'A-0 System' },\n  { name: 'A+ (programming language)' },\n  { name: 'ABAP' },\n  { name: 'ABC (programming language)' },\n  { name: 'ABC ALGOL' },\n  { name: 'ACC (programming language)' },\n  { name: 'Accent (programming language)' },\n  { name: 'Distributed Application Specification Language' },\n  { name: 'Action! (programming language)' },\n  { name: 'ActionScript' },\n  { name: 'Actor (programming language)' },\n  { name: 'Ada (programming language)' },\n  { name: 'Adenine (programming language)' },\n  { name: 'Agda (theorem prover)' },\n  { name: 'Agilent VEE' },\n  { name: 'Agora (programming language)' },\n  { name: 'AIMMS' },\n  { name: 'Aldor' },\n  { name: 'Alef (programming language)' },\n  { name: 'Algebraic Logic Functional programming language' },\n  { name: 'ALGOL 58' },\n  { name: 'ALGOL 60' },\n  { name: 'ALGOL 68' },\n  { name: 'ALGOL W' },\n  { name: 'Alice (programming language)' },\n  { name: 'Alma-0' },\n  { name: 'AmbientTalk' },\n  { name: 'Amiga E' },\n  { name: 'AMOS (programming language)' },\n  { name: 'AMPL' },\n  { name: 'AngelScript' },\n  { name: 'Apex (programming language)' },\n  { name: 'APL (programming language)' },\n  { name: 'App Inventor for Android (programming language)' },\n  { name: 'AppleScript' },\n  { name: 'APT (programming language)' },\n  { name: 'Arc (programming language)' },\n  { name: 'ARexx' },\n  { name: 'Argus (programming language)' },\n  { name: 'Assembly language' },\n  { name: 'AutoHotkey' },\n  { name: 'AutoIt' },\n  { name: 'AutoLISP' },\n  { name: 'Averest' },\n  { name: 'AWK' },\n  { name: 'Axum (programming language)' },\n  { name: 'Babbage (programming language)' },\n  { name: 'Ballerina (programming language)' },\n  { name: 'Bash (Unix shell)' },\n  { name: 'BASIC' },\n  { name: 'Batch file' },\n  { name: 'Bc (programming language)' },\n  { name: 'BCPL' },\n  { name: 'BeanShell' },\n  { name: 'Bertrand (programming language)' },\n  { name: 'BETA (programming language)' },\n  { name: 'BLISS (programming language)' },\n  { name: 'Blockly' },\n  { name: 'BlooP and FlooP' },\n  { name: 'Boo (programming language)' },\n  { name: 'Boomerang (programming language)' },\n  { name: 'Bosque (programming language)' },\n  { name: 'Bourne shell' },\n  { name: 'Korn shell' },\n  { name: 'C--' },\n  { name: 'C++' },\n  { name: 'C*' },\n  { name: 'C Sharp (programming language)' },\n  { name: 'C/AL' },\n  { name: 'Cach\\\\u00e9 ObjectScript' },\n  { name: 'C Shell' },\n  { name: 'Caml' },\n  { name: 'Cayenne (programming language)' },\n  { name: 'CDuce' },\n  { name: 'Cecil (programming language)' },\n  { name: 'Cesil' },\n  { name: 'C\\\\u00e9u (programming language)' },\n  { name: 'Ceylon (programming language)' },\n  { name: 'CFEngine' },\n  { name: 'Cg (programming language)' },\n  { name: 'Ch (computer programming)' },\n  { name: 'Chapel (programming language)' },\n  { name: 'Charm (language)' },\n  { name: 'CHILL' },\n  { name: 'CHIP-8' },\n  { name: 'Chomski' },\n  { name: 'ChucK' },\n  { name: 'Cilk' },\n  { name: 'Citrine (programming language)' },\n  { name: 'AS/400 Control Language' },\n  { name: 'Claire (programming language)' },\n  { name: 'Clarion (programming language)' },\n  { name: 'Clean (programming language)' },\n  { name: 'Clipper (programming language)' },\n  { name: 'CLIPS (programming language)' },\n  { name: 'CLIST' },\n  { name: 'Clojure' },\n  { name: 'CLU (programming language)' },\n  { name: 'CMS-2 (programming language)' },\n  { name: 'COBOL' },\n  { name: 'CobolScript' },\n  { name: 'Cobra (programming language)' },\n  { name: 'CoffeeScript' },\n  { name: 'ColdFusion' },\n  { name: 'COMAL' },\n  { name: 'Combined Programming Language' },\n  { name: 'COMIT' },\n  { name: 'Common Intermediate Language' },\n  { name: 'Common Lisp' },\n  { name: 'COMPASS' },\n  { name: 'Component Pascal' },\n  { name: 'Constraint Handling Rules' },\n  { name: 'COMTRAN' },\n  { name: 'Cool (programming language)' },\n  { name: 'Coq' },\n  { name: 'Coral 66' },\n  { name: 'CorVision' },\n  { name: 'COWSEL' },\n  { name: 'CPL (programming language)' },\n  { name: 'Cryptol' },\n  { name: 'Crystal (programming language)' },\n  { name: 'Csound' },\n  { name: 'CSS' },\n  { name: 'Cuneiform (programming language)' },\n  { name: 'Curl (programming language)' },\n  { name: 'Curry (programming language)' },\n  { name: 'Cybil (programming language)' },\n  { name: 'Cyclone (programming language)' },\n  { name: 'Cypher Query Language' },\n  { name: 'Cython' },\n  { name: 'CEEMAC' },\n  { name: 'Digital Asset Modeling Language (DAML) (page does not exist)' },\n  { name: \"Datapoint's Advanced Systems Language\" },\n  { name: 'Dart (programming language)' },\n  { name: 'Darwin (programming language)' },\n  { name: 'DataFlex' },\n  { name: 'Datalog' },\n  { name: 'DATATRIEVE' },\n  { name: 'DBase' },\n  { name: 'Dc (computer program)' },\n  { name: 'DIGITAL Command Language' },\n  { name: 'Dink Smallwood' },\n  { name: 'DIBOL' },\n  { name: 'DNA' },\n  { name: 'Dog (programming language)' },\n  { name: 'Draco (programming language)' },\n  { name: 'DRAKON' },\n  { name: 'Dylan (programming language)' },\n  { name: 'DYNAMO (programming language)' },\n  { name: 'Data analysis expressions' },\n  { name: 'Ease (programming language)' },\n  { name: 'PL/I' },\n  { name: 'Easytrieve' },\n  { name: 'EC (programming language)' },\n  { name: 'ECMAScript' },\n  { name: 'Edinburgh IMP' },\n  { name: 'EGL (programming language)' },\n  { name: 'Eiffel (programming language)' },\n  { name: 'ELAN (programming language)' },\n  { name: 'Elixir (programming language)' },\n  { name: 'Elm (programming language)' },\n  { name: 'Emacs Lisp' },\n  { name: 'Emerald (programming language)' },\n  { name: 'Epigram (programming language)' },\n  { name: 'Easy Programming Language' },\n  { name: 'Eltron Programming Language' },\n  { name: 'Erlang (programming language)' },\n  { name: 'Es (Unix shell)' },\n  { name: 'Escher (programming language)' },\n  { name: 'Executive Systems Problem Oriented Language' },\n  { name: 'Esterel' },\n  { name: 'Etoys (programming language)' },\n  { name: 'Euclid (programming language)' },\n  { name: 'Euler (programming language)' },\n  { name: 'Euphoria (programming language)' },\n  { name: 'EusLisp Robot Programming Language' },\n  { name: 'CMS EXEC' },\n  { name: 'EXEC 2' },\n  { name: 'Executable UML' },\n  { name: 'Ezhil (programming language)' },\n  { name: 'F Sharp (programming language)' },\n  { name: 'F* (programming language)' },\n  { name: 'Factor (programming language)' },\n  { name: 'Fantom (programming language)' },\n  { name: 'FAUST (programming language)' },\n  { name: 'FFP (programming language)' },\n  { name: 'Friendly interactive shell' },\n  { name: 'Fj\\\\u00f6lnir (programming language)' },\n  { name: 'FL (programming language)' },\n  { name: 'Flavors (programming language)' },\n  { name: 'Flex (language)' },\n  { name: 'FLOW-MATIC' },\n  { name: 'FOCAL (programming language)' },\n  { name: 'FOCUS' },\n  { name: 'FOIL (programming language)' },\n  { name: 'FORMAC (programming language)' },\n  { name: 'Formula language' },\n  { name: 'Forth (programming language)' },\n  { name: 'Fortran' },\n  { name: 'Fortress (programming language)' },\n  { name: 'FP (programming language)' },\n  { name: 'Franz Lisp' },\n  { name: 'Futhark (programming language)' },\n  { name: 'F-Script (programming language)' },\n  { name: 'Game Maker Language' },\n  { name: 'Scripting language' },\n  { name: 'GameMonkey Script' },\n  { name: 'General Algebraic Modeling System' },\n  { name: 'GAP computer algebra system' },\n  { name: 'G-code' },\n  { name: 'GDScript' },\n  { name: 'Genie (programming language)' },\n  { name: 'Geometric Description Language' },\n  { name: 'GEORGE (programming language)' },\n  { name: 'GIT' },\n  { name: 'GLSL' },\n  { name: 'GNU E' },\n  { name: 'GNU Guile' },\n  { name: 'Go (programming language)' },\n  { name: 'Go! (programming language)' },\n  { name: 'Game Oriented Assembly Lisp' },\n  { name: 'G\\\\u00f6del (programming language)' },\n  { name: 'Golo (programming language)' },\n  { name: 'MAD (programming language)' },\n  { name: 'Google Apps Script' },\n  { name: 'Gosu (programming language)' },\n  { name: 'IBM 1620' },\n  { name: 'GPSS' },\n  { name: 'Computer Sciences Corporation' },\n  { name: 'GRASS (programming language)' },\n  { name: 'Grasshopper 3D' },\n  { name: 'Groovy (programming language)' },\n  { name: 'Hack (programming language)' },\n  { name: 'HAGGIS' },\n  { name: 'HAL/S' },\n  { name: 'HTML' },\n  { name: 'Halide (programming language)' },\n  { name: 'Hamilton C shell' },\n  { name: 'Harbour (software)' },\n  { name: 'Hartmann pipeline' },\n  { name: 'Haskell (programming language)' },\n  { name: 'Haxe' },\n  { name: 'Hermes (programming language)' },\n  { name: 'High Level Assembly' },\n  { name: 'High Level Shader Language' },\n  { name: 'Hollywood (programming language)' },\n  { name: 'TempleOS' },\n  { name: 'Hop (software)' },\n  { name: 'Hopscotch (programming language)' },\n  { name: 'Hope (programming language)' },\n  { name: 'Hugo (programming language)' },\n  { name: 'Hume (language)' },\n  { name: 'HyperTalk' },\n  { name: 'Io (programming language)' },\n  { name: 'Icon (programming language)' },\n  { name: 'IBM Basic assembly language' },\n  { name: 'IBM HAScript' },\n  { name: 'IBM Informix-4GL' },\n  { name: 'IBM RPG' },\n  { name: 'IDL (programming language)' },\n  { name: 'Idris (programming language)' },\n  { name: 'Inform (programming language)' },\n  { name: 'J Sharp' },\n  { name: 'Visual J++' },\n  { name: 'JADE (programming language)' },\n  { name: 'JAL (compiler)' },\n  { name: 'Janus (concurrent constraint programming language)' },\n  { name: 'Janus (time-reversible computing programming language)' },\n  { name: 'JASS' },\n  { name: 'Java (programming language)' },\n  { name: 'JavaFX Script' },\n  { name: 'JavaScript' },\n  { name: 'Jess (programming language)' },\n  { name: 'Job Control Language' },\n  { name: 'JEAN' },\n  { name: 'Join Java' },\n  { name: 'JOSS' },\n  { name: 'Joule (programming language)' },\n  { name: 'JOVIAL' },\n  { name: 'Joy (programming language)' },\n  { name: 'JQuery' },\n  { name: 'JScript' },\n  { name: 'JScript .NET' },\n  { name: 'Julia (programming language)' },\n  { name: 'Jython' },\n  { name: 'Kaleidoscope (programming language)' },\n  { name: 'Karel (programming language)' },\n  { name: 'IntelliCorp (Software)' },\n  { name: 'KiXtart' },\n  { name: 'Klerer-May System' },\n  { name: 'Knowledge Interchange Format' },\n  { name: 'Kojo (programming language)' },\n  { name: 'Kotlin (programming language)' },\n  { name: 'Kent Recursive Calculator' },\n  { name: 'KRL (programming language)' },\n  { name: 'KUKA Robot Language' },\n  { name: 'KRYPTON' },\n  { name: 'Kodu Game Lab' },\n  { name: 'Kivy (framework)' },\n  { name: 'LabVIEW' },\n  { name: 'Ladder logic' },\n  { name: 'LANSA (development environment)' },\n  { name: 'Lasso (programming language)' },\n  { name: 'Lava (programming language)' },\n  { name: 'Little Computer 3' },\n  { name: 'Legoscript' },\n  { name: 'Little Implementation Language' },\n  { name: 'LilyPond' },\n  { name: 'Limbo (programming language)' },\n  { name: 'Limnor' },\n  { name: 'LINC 4GL' },\n  { name: 'Lingo (programming language)' },\n  { name: 'LINQ' },\n  { name: 'LIS (programming language)' },\n  { name: 'Language for Instruction Set Architecture' },\n  { name: 'Language H' },\n  { name: 'Lisp (programming language)' },\n  { name: 'Lite-C' },\n  { name: 'Lithe (programming language)' },\n  { name: 'Little b (programming language)' },\n  { name: 'Ethereum' },\n  { name: 'Logo (programming language)' },\n  { name: 'Logtalk' },\n  { name: 'LotusScript' },\n  { name: 'LPC (programming language)' },\n  { name: 'LSE (programming language)' },\n  { name: 'Linden Scripting Language' },\n  { name: 'LiveCode' },\n  { name: 'LiveScript' },\n  { name: 'Lua (programming language)' },\n  { name: 'Lucid (programming language)' },\n  { name: 'Lustre (programming language)' },\n  { name: 'LYaPAS' },\n  { name: 'Lynx (programming language)' },\n  { name: 'M2001' },\n  { name: 'M4 (computer language)' },\n  { name: 'M Sharp (programming language)' },\n  { name: 'Machine code' },\n  { name: 'Magik (programming language)' },\n  { name: 'Magma computer algebra system' },\n  { name: 'M\\\\u00e1ni' },\n  { name: 'Maple (software)' },\n  { name: 'MAPPER' },\n  { name: 'MARK IV (software)' },\n  { name: 'Mary (programming language)' },\n  { name: 'MATLAB' },\n  { name: 'Microsoft Macro Assembler' },\n  { name: 'MATH-MATIC' },\n  { name: 'Maude system' },\n  { name: 'Maxima (software)' },\n  { name: 'Macsyma' },\n  { name: 'Max (software)' },\n  { name: 'Autodesk 3ds Max' },\n  { name: 'Maya Embedded Language' },\n  { name: 'MDL (programming language)' },\n  { name: 'Mercury (programming language)' },\n  { name: 'Mesa (programming language)' },\n  { name: 'Metafont' },\n  { name: 'MHEG-5' },\n  { name: 'Microassembler' },\n  { name: 'MicroScript (programming language)' },\n  { name: 'MIIS (programming language)' },\n  { name: 'Milk (programming language)' },\n  { name: 'MIMIC' },\n  { name: 'Mirah (programming language)' },\n  { name: 'Miranda (programming language)' },\n  { name: 'MIVA Script' },\n  { name: 'ML (programming language)' },\n  { name: 'Model 204' },\n  { name: 'Modelica' },\n  { name: 'Modula' },\n  { name: 'Modula-2' },\n  { name: 'Modula-3' },\n  { name: 'Mohol programming languages' },\n  { name: 'MOO (programming language)' },\n  { name: 'Mortran' },\n  { name: 'Mouse (programming language)' },\n  { name: 'MPD (programming language)' },\n  { name: 'Mathcad' },\n  { name: 'MIRC scripting language' },\n  { name: 'MUMPS' },\n  { name: 'MuPAD' },\n  { name: 'Mystic BBS' },\n  { name: 'Netwide Assembler' },\n  { name: 'Napier88' },\n  { name: 'Neko (programming language)' },\n  { name: 'Nemerle' },\n  { name: 'NESL' },\n  { name: 'Net.Data' },\n  { name: 'NetLogo' },\n  { name: 'NetRexx' },\n  { name: 'NewLISP' },\n  { name: 'NEWP' },\n  { name: 'Newspeak (programming language)' },\n  { name: 'NewtonScript' },\n  { name: 'Nial' },\n  { name: 'Nice (programming language)' },\n  { name: 'Nickle (programming language)' },\n  { name: 'Nim (programming language)' },\n  { name: 'NORD Programming Language' },\n  { name: 'Not eXactly C' },\n  { name: 'Not Quite C' },\n  { name: 'Nullsoft Scriptable Install System' },\n  { name: 'Nu (programming language)' },\n  { name: 'NWScript' },\n  { name: 'NXT-G' },\n  { name: 'O:XML' },\n  { name: 'Oak (programming language)' },\n  { name: 'Oberon (programming language)' },\n  { name: 'OBJ2' },\n  { name: 'Object Lisp' },\n  { name: 'ObjectLOGO' },\n  { name: 'Object REXX' },\n  { name: 'Object Pascal' },\n  { name: 'Objective-C' },\n  { name: 'Objective-J' },\n  { name: 'Obliq' },\n  { name: 'OCaml' },\n  { name: 'Occam (programming language)' },\n  { name: 'Occam-\\\\u03c0' },\n  { name: 'GNU Octave' },\n  { name: 'OmniMark' },\n  { name: 'Opa (programming language)' },\n  { name: 'Opal (programming language)' },\n  { name: 'OpenCL' },\n  { name: 'OpenEdge Advanced Business Language' },\n  { name: 'Open Programming Language' },\n  { name: 'OpenVera' },\n  { name: 'OPS5' },\n  { name: 'OptimJ' },\n  { name: 'Orc (programming language)' },\n  { name: 'ORCA/Modula-2' },\n  { name: 'Oriel (scripting language)' },\n  { name: 'Orwell (programming language)' },\n  { name: 'Oxygene (programming language)' },\n  { name: 'Oz (programming language)' },\n  { name: 'P (programming language)' },\n  { name: 'P4 (programming language)' },\n  { name: 'P\\\\u2032\\\\u2032' },\n  { name: 'ParaSail (programming language)' },\n  { name: 'PARI/GP' },\n  { name: 'Pascal (programming language)' },\n  { name: 'Pascal Script' },\n  { name: 'PCASTL' },\n  { name: 'Programming language for Computable Functions' },\n  { name: 'PEARL (programming language)' },\n  { name: 'PeopleCode' },\n  { name: 'Perl' },\n  { name: 'Perl Data Language' },\n  { name: 'Pharo' },\n  { name: 'PHP' },\n  { name: 'Pico (programming language)' },\n  { name: 'Picolisp' },\n  { name: 'Pict (programming language)' },\n  { name: 'Pig (programming tool)' },\n  { name: 'Pike (programming language)' },\n  { name: 'PILOT' },\n  { name: 'Pizza (programming language)' },\n  { name: 'PL-11' },\n  { name: 'PL/0' },\n  { name: 'Programming Language for Business' },\n  { name: 'PL/C' },\n  { name: 'PL/M' },\n  { name: 'PL/P' },\n  { name: 'PL/SQL' },\n  { name: 'PL360' },\n  { name: 'PLANC' },\n  { name: 'Plankalk\\\\u00fcl' },\n  { name: 'Planner (programming language)' },\n  { name: 'PLEX (programming language)' },\n  { name: 'PLEXIL' },\n  { name: 'Plus (programming language)' },\n  { name: 'POP-11' },\n  { name: 'POP-2' },\n  { name: 'PostScript' },\n  { name: 'POV-Ray' },\n  { name: 'Powerhouse (programming language)' },\n  { name: 'PowerBuilder' },\n  { name: 'PowerShell' },\n  { name: 'Polymorphic Programming Language' },\n  { name: 'Processing (programming language)' },\n  { name: 'Processing.js' },\n  { name: 'Prograph' },\n  { name: 'PROIV' },\n  { name: 'Prolog' },\n  { name: 'PROMAL' },\n  { name: 'Promela' },\n  { name: 'PROSE modeling language' },\n  { name: 'Protel' },\n  { name: 'ProvideX' },\n  { name: 'Pro*C' },\n  { name: 'Pure (programming language)' },\n  { name: 'Pure Data' },\n  { name: 'PureScript' },\n  { name: 'Python (programming language)' },\n  { name: 'Q (programming language from Kx Systems)' },\n  { name: 'Q Sharp' },\n  { name: 'Qalb (programming language)' },\n  { name: 'Quantum Computation Language' },\n  { name: 'QtScript' },\n  { name: 'QuakeC' },\n  { name: 'Quantum programming' },\n  { name: 'Qbasic' },\n  { name: '.QL' },\n  { name: 'R (programming language)' },\n  { name: 'R++' },\n  { name: 'Racket (programming language)' },\n  { name: 'Raku (programming language)' },\n  { name: 'RAPID' },\n  { name: 'Rapira' },\n  { name: 'Ratfiv' },\n  { name: 'Ratfor' },\n  { name: 'Rc' },\n  { name: 'Reason (programming language)' },\n  { name: 'REBOL' },\n  { name: 'Red (programming language)' },\n  { name: 'Core War' },\n  { name: 'REFAL' },\n  { name: 'REXX' },\n  { name: 'Rlab' },\n  { name: 'RNA' },\n  { name: 'ROOP (programming language)' },\n  { name: 'RPL (programming language)' },\n  { name: 'Robot Battle' },\n  { name: 'RTL/2' },\n  { name: 'Ruby (programming language)' },\n  { name: 'Rust (programming language)' },\n  { name: 'S (programming language)' },\n  { name: 'S2 (programming language)' },\n  { name: 'S3 (programming language)' },\n  { name: 'SARS' },\n  { name: 'S-Lang (programming language)' },\n  { name: 'S-PLUS' },\n  { name: 'SA-C (programming language)' },\n  { name: 'SabreTalk' },\n  { name: 'SAIL (programming language)' },\n  { name: 'SAM76 (page does not exist)' },\n  { name: 'SAS System' },\n  { name: 'SASL (programming language)' },\n  { name: 'Sather' },\n  { name: 'Sawzall (programming language)' },\n  { name: 'Scala (programming language)' },\n  { name: 'Scheme (programming language)' },\n  { name: 'Scilab' },\n  { name: 'SCOTUS' },\n  { name: 'Scratch (programming language)' },\n  { name: 'Script.NET' },\n  { name: 'SEC' },\n  { name: 'Sed' },\n  { name: 'Seed7' },\n  { name: 'Self (programming language)' },\n  { name: 'SenseTalk' },\n  { name: 'SEO' },\n  { name: 'SequenceL' },\n  { name: 'Serbian' },\n  { name: 'SETL' },\n  { name: 'Superbase database' },\n  { name: 'Sharchhopka (page does not exist)' },\n  { name: 'SIGNAL (programming language)' },\n  { name: 'SiMPLE' },\n  { name: 'SIMSCRIPT' },\n  { name: 'Simula' },\n  { name: 'Simulink' },\n  { name: 'Singularity (operating system)' },\n  { name: 'SISAL' },\n  { name: 'SLIP (programming language)' },\n  { name: 'SMALL' },\n  { name: 'Smalltalk' },\n  { name: 'Standard ML' },\n  { name: 'Strongtalk' },\n  { name: 'Snap! (programming language)' },\n  { name: 'SNOBOL' },\n  { name: 'SPITBOL compiler' },\n  { name: 'Snowball programming language' },\n  { name: 'Secure Operations Language' },\n  { name: 'Solidity' },\n  { name: 'SOPHAEROS' },\n  { name: 'Source (programming language)' },\n  { name: 'Spanish' },\n  { name: 'SPARK (programming language)' },\n  { name: 'Speakeasy (computational environment)' },\n  { name: 'Speedcoding' },\n  { name: 'Parallax Propeller' },\n  { name: 'SP/k' },\n  { name: 'IBM 1401 Symbolic Programming System' },\n  { name: 'SQL' },\n  { name: 'SQR' },\n  { name: 'Squeak' },\n  { name: 'Squirrel (programming language)' },\n  { name: 'SR (programming language)' },\n  { name: 'S/SL programming language' },\n  { name: 'Starlogo' },\n  { name: 'Strand (programming language)' },\n  { name: 'Stata' },\n  { name: 'Stateflow' },\n  { name: 'Subtext (programming language)' },\n  { name: 'SuperCollider' },\n  { name: 'SuperTalk' },\n  { name: 'Swift (programming language)' },\n  { name: 'Swift (parallel scripting language)' },\n  { name: 'SYMPL' },\n  { name: 'SystemVerilog' },\n  { name: 'TACL' },\n  { name: 'TACPOL (programming language)' },\n  { name: 'TADS' },\n  { name: 'Transaction Application Language' },\n  { name: 'Tcl' },\n  { name: 'Tea (programming language)' },\n  { name: 'Text Editor and Corrector' },\n  { name: 'TELCOMP' },\n  { name: 'TeX' },\n  { name: 'Text Executive Programming Language' },\n  { name: 'Tensilica Instruction Extension' },\n  { name: 'TMG (language)' },\n  { name: 'Tom (pattern matching language)' },\n  { name: 'TOM (object-oriented programming language)' },\n  { name: 'Toi (programming language)' },\n  { name: 'Text Processing Utility' },\n  { name: 'TRAC (programming language)' },\n  { name: 'TTM (programming language)' },\n  { name: 'Transact-SQL' },\n  { name: 'Transcript (programming language)' },\n  { name: 'TTCN' },\n  { name: 'Turing (programming language)' },\n  { name: 'TUTOR (programming language)' },\n  { name: 'TXL (programming language)' },\n  { name: 'TypeScript' },\n  { name: 'Tynker' },\n  { name: 'Ubercode' },\n  { name: 'UCSD Pascal' },\n  { name: 'Umple' },\n  { name: 'Unicon (programming language)' },\n  { name: 'Uniface (programming language)' },\n  { name: 'UNITY (programming language)' },\n  { name: 'Unix shell' },\n  { name: 'UnrealScript' },\n  { name: 'Vala (programming language)' },\n  { name: 'Verilog' },\n  { name: 'VHDL' },\n  { name: 'Vim (text editor)' },\n  { name: 'Visual Basic' },\n  { name: 'Visual Basic .NET' },\n  { name: 'Visual DataFlex' },\n  { name: 'Visual DialogScript' },\n  { name: 'Visual Fortran' },\n  { name: 'Visual FoxPro' },\n  { name: 'Visual Objects' },\n  { name: 'Visual Prolog' },\n  { name: 'VSXu' },\n  { name: 'WATFIV (programming language)' },\n  { name: 'WebAssembly' },\n  { name: 'WebDNA' },\n  { name: 'Whiley (programming language)' },\n  { name: 'Winbatch' },\n  { name: 'Wolfram Language' },\n  { name: 'Wyvern (programming language)' },\n  { name: 'X++' },\n  { name: 'X10 (programming language)' },\n  { name: 'XAML' },\n  { name: 'XBase' },\n  { name: 'XBase++' },\n  { name: 'XBL' },\n  { name: 'XC (programming language)' },\n  { name: 'XCore XS1' },\n  { name: 'XHarbour' },\n  { name: 'XL (programming language)' },\n  { name: 'Xojo' },\n  { name: 'XOTcl' },\n  { name: 'XOD (programming language)' },\n  { name: 'XPL' },\n  { name: 'XPL0' },\n  { name: 'XQuery' },\n  { name: 'XSB' },\n  { name: 'XSharp' },\n  { name: 'XSL Transformations' },\n  { name: 'Xtend' },\n  { name: 'YAML' },\n  { name: 'Yorick (programming language)' },\n  { name: 'YQL (programming language)' },\n  { name: 'Yoix' },\n  { name: 'YUI Library' },\n  { name: 'Z notation' },\n  { name: 'Zebra (programming language)' },\n  { name: 'Zeno (programming language)' },\n  { name: 'ZetaLisp' },\n  { name: 'ZOPL' },\n  { name: 'Z shell' },\n  { name: 'ZPL (programming language)' },\n  { name: 'Z++' },\n];\n","import React from 'react';\nimport { ResumeProps } from './types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNightEighties } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\ntype RenderResumeConfigProps = {\n  config: ResumeProps;\n};\n\nexport const RenderResumeConfig = ({ config }: RenderResumeConfigProps) => {\n  const codeString = `${JSON.stringify(config, null, ' ')}`;\n  return (<SyntaxHighlighter language=\"json\" style={tomorrowNightEighties} showLineNumbers>\n    {codeString}\n  </SyntaxHighlighter>);\n};\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { ExpansionPanel, ExpansionList, Autocomplete, Chip } from 'react-md';\nimport { PROGRAMMING_LANGUAGES, OTHER, PROGRAMMING_SOFTWARES, FRAMEWORKS, PROCEDURAL_EXTENSIONS } from '../constants';\nimport { SkillsType, SkillsChipProps, EditSkillsProps } from '../types';\n\nexport const SkillsChip = ({ skill, onClick } : SkillsChipProps) => {\n  const { name } = skill;\n  const handleRemove = () => onClick(skill);\n    return (\n      <Chip\n        onClick={handleRemove}\n        removable\n        label={name}\n      />\n    );\n};\n\nconst consolidatedSkillsSet = _.concat([], PROGRAMMING_LANGUAGES, PROGRAMMING_SOFTWARES, FRAMEWORKS, PROCEDURAL_EXTENSIONS, OTHER);\n\nclass SelectSkillsInput extends Component<EditSkillsProps> {\n  state = { filteredSkills: consolidatedSkillsSet };\n\n  updateFilteredSkills = (selectedSkills: Array<{}>) => {\n    this.setState({\n      filteredSkills: consolidatedSkillsSet.filter(skill => selectedSkills.indexOf(skill) === -1),\n    });\n  };\n\n  addSkill = (_suggestion: string, index: number, matches: Array<SkillsType>) => {\n    const state = matches[index];\n    const selectedSkills = _.uniqBy([...this.props.skills, state], (skill: SkillsType) => skill.name);\n    this.updateFilteredSkills(selectedSkills);\n    this.props.setSkills(selectedSkills);\n  };\n\n  removeSkill = (skill: SkillsType) => {\n    const selectedSkills : Array<SkillsType> = this.props.skills.slice();\n    selectedSkills.splice(selectedSkills.indexOf(skill), 1);\n    this.updateFilteredSkills(selectedSkills);\n    this.props.setSkills(selectedSkills);\n  };\n\n  render() {\n    const { filteredSkills } = this.state;\n    return (\n      <div>\n        {this.props.skills.map((skill: SkillsType) => (\n          <SkillsChip\n            key={skill.name}\n            skill={skill}\n            onClick={this.removeSkill}\n          />\n        ))}\n        <Autocomplete\n          label=\"Select some skills\"\n          data={filteredSkills}\n          dataLabel=\"name\"\n          dataValue=\"name\"\n          // @ts-ignore\n          onAutocomplete={this.addSkill}\n          clearOnAutocomplete\n          deleteKeys=\"name\"\n        />\n    </div>\n    );\n  }\n};\n\nexport const EditSkills = ({ skills, setSkills }: EditSkillsProps) => (\n  <ExpansionList>\n    <ExpansionPanel label=\"Edit Skills\" footer={null}>\n      <SelectSkillsInput skills={skills} setSkills={setSkills} />\n      </ExpansionPanel>\n  </ExpansionList>\n);","import React from 'react';\nimport { TextFieldWrapperProps, DatePickerWrapperProps } from '../types';\nimport { TextField, DatePicker } from 'react-md';\n\nexport const TextFieldWrapper = ({ style, label, value, func }: TextFieldWrapperProps) => (\n  <TextField\n    style={style}\n    label={label}\n    lineDirection=\"center\"\n    className=\"md-cell md-cell--bottom\"\n    value={value}\n    onChange={(value) => func(value)}\n  />\n);\n\nexport const DatePickerWrapper = ({ id, label, onChange } : DatePickerWrapperProps) => (\n  <DatePicker\n    id={id}\n    label={label}\n    className=\"md-cell\"\n    inline\n    onChange={onChange}\n  />\n);","import _ from 'lodash';\nimport React, { useState } from 'react';\nimport arrayMove from 'array-move';\nimport { ListItem, FontIcon, ExpansionList, ExpansionPanel, List, Subheader, Grid, TextField, Button } from 'react-md';\nimport { ExperienceItemProps, AddExperienceFormProps, EditProfessionalExperienceProps } from '../types';\nimport { TextFieldWrapper, DatePickerWrapper } from './Wrappers';\n\nexport const EditProfessionalExperience = (\n  { myExperienceList, removeExperience, addExperience, setExperience } : EditProfessionalExperienceProps) => {\n  const myExperienceListSize = _.size(myExperienceList);\n\n  const up = (index: number) => {\n    if (index === 0) return;\n    const newList = arrayMove(myExperienceList, index, index - 1);\n    setExperience(newList);\n  }\n\n  const down = (index: number) => {\n    if ((index + 1) === myExperienceListSize) return;\n    const newList = arrayMove(myExperienceList, index, index + 1);\n    setExperience(newList);\n  }\n\n  return (\n    <ExpansionList>\n      <ExpansionPanel label=\"Edit Professional Experience\" footer={null}>\n        {/* {JSON.stringify(myExperienceList)} */}\n        <AddExperienceForm addExperience={addExperience} />\n        <List className=\"md-cell md-paper md-paper--1\" style={{ width: '100%', margin: '20px 0' }}>\n        <Subheader primaryText=\"My Jobs\" />\n        {myExperienceList.map((exp, index) => (\n            <ExperienceItem\n              key={index}\n              index={index}\n              exp={exp}\n              myExperienceListSize={myExperienceListSize }\n              removeExperience={removeExperience}\n              up={up}\n              down={down}\n            />\n        ))}\n      </List>\n      </ExpansionPanel>\n    </ExpansionList>\n  );\n};\n\nexport const ExperienceItem = ({ exp, index, removeExperience, myExperienceListSize, up, down } : ExperienceItemProps) => {\n  const disabledReordering = myExperienceListSize > 1;\n  return (\n    <ListItem\n        rightIcon={<>\n          <FontIcon\n            secondary\n            disabled={!disabledReordering || index === 0}\n            forceFontSize\n            onClick={() => up(index)}\n            >\n              arrow_drop_up\n          </FontIcon>\n          <FontIcon\n            secondary\n            disabled={!disabledReordering || (index + 1) === myExperienceListSize}\n            forceFontSize\n            onClick={() => down(index)}\n          >\n            arrow_drop_down\n          </FontIcon>\n          <FontIcon\n            secondary\n            onClick={() => removeExperience(index)}\n            >\n              close\n          </FontIcon>\n        </>}\n        primaryText={exp.company}\n        secondaryText={exp.jobPosition}\n    />\n  );\n};\n\nexport const AddExperienceForm = ({ addExperience } : AddExperienceFormProps) => {\n  const [jobPosition, setJobPosition] = useState('');\n  const [company, setCompany] = useState('');\n  const [description, setDescription] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  \n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    if (jobPosition === '' || company === '' || startDate === '') return;\n    addExperience(jobPosition, company, startDate, endDate, description);\n    setJobPosition('');\n    setCompany('');\n    setDescription('');\n  };\n\n  return (\n    <div>\n        <TextFieldWrapper style={{ width: '100%' }} label=\"Company\" value={company} func={setCompany} />\n        <TextFieldWrapper style={{ width: '100%' }} label=\"Job Position\" value={jobPosition} func={setJobPosition} />\n        <Grid style={{ padding: 0 }}>\n          <DatePickerWrapper\n            id=\"start-date\"\n            label=\"Start Date\"\n            onChange={(dateString) => setStartDate(dateString)}\n          />\n          <DatePickerWrapper\n            id=\"end-date\"\n            label=\"End Date\"\n            onChange={(dateString) => setEndDate(dateString)}\n          />\n        </Grid>\n        <TextField\n          style={{ width: '100%' }}\n          label=\"Description\"\n          lineDirection=\"center\"\n          rows={3}\n          maxLength={235}\n          className=\"md-cell md-cell--bottom\"\n          value={description}\n          // @ts-ignore\n          onChange={value => setDescription(value)}\n        />\n        <Button flat primary swapTheming onClick={handleSubmit}>Add</Button>\n    </div>\n  );\n};","import React from 'react';\nimport { HeaderProfileProps, EditHeaderProfileProps } from '../types';\nimport { ExpansionList, ExpansionPanel, Grid } from 'react-md';\nimport { TextFieldWrapper } from './Wrappers';\n\nconst EditHeaderProfile = ({\n  firstName,\n  setFirstNameState,\n  middleName,\n  setMiddleName,\n  lastName,\n  setLastName,\n  jobTitle,\n  setJobTitle,\n}: HeaderProfileProps & EditHeaderProfileProps) => {\n  return (\n    <ExpansionList>\n      <ExpansionPanel label=\"Edit Full Name and Job Title\" footer={null}>\n        <Grid style={{ padding: 0 }}>\n          <TextFieldWrapper label=\"First Name\" value={firstName} func={setFirstNameState} />\n          <TextFieldWrapper label=\"Middle Name\" value={middleName} func={setMiddleName} />\n          <TextFieldWrapper label=\"Last Name\" value={lastName} func={setLastName} />\n          <TextFieldWrapper label=\"Job Title\" value={jobTitle} func={setJobTitle} />\n        </Grid>\n      </ExpansionPanel>\n    </ExpansionList>\n  );\n};\n\nexport default EditHeaderProfile;\n","import React, { useState, useRef } from 'react';\nimport { Grid, Cell, CardText, Card, CardTitle, Button } from 'react-md';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { ResumePreview } from './Components/ResumePreviewComponent';\nimport { INITIAL_VALUES } from './constants';\nimport { RenderResumeConfig } from './RenderResumeConfigProps';\nimport { EditSkills } from './Components/EditSkills';\nimport { EditProfessionalExperience } from './Components/EditProfessionalExperience';\nimport EditHeaderProfile from './Components/EditHeaderProfile';\n\n\nconst Main = () => {\n  // react hooks for basic information like name/job title\n  const [firstName, setFirstNameState] = useState<string>(INITIAL_VALUES.firstName);\n  const [middleName, setMiddleName] = useState<string>(INITIAL_VALUES.middleName);\n  const [lastName, setLastName] = useState<string>(INITIAL_VALUES.lastName);\n  const [jobTitle, setJobTitle] = useState<string>(INITIAL_VALUES.jobTitle);\n  \n  let resume = useRef();\n  const pdfFileName = `${firstName} ${lastName} Resume.pdf` \n  \n  // react hooks for skills\n  const [skills, setSkills] = useState<Array<{ name: string }>>(INITIAL_VALUES.skills);\n\n  // react hooks for professional experience\n  const [professionalExperiences, setExperiences] = useState(INITIAL_VALUES.professionalExperiences);\n\n  // resume config object\n  const resumeConfig = ({ firstName, middleName, lastName, jobTitle, professionalExperiences, skills });\n\n  const addExperience = (jobPosition: string, company: string, startDate: string, endDate: string, description: string) => {\n    const newExperience = [...professionalExperiences, { jobPosition, company, startDate, endDate, description }];\n    setExperiences(newExperience);\n  };\n  \n  const removeExperience = (index: number) => {\n    const updatedJobExperienceList = [...professionalExperiences];\n    updatedJobExperienceList.splice(index, 1);\n    setExperiences(updatedJobExperienceList);\n  };\n\n  const download = () => {\n    var element = document.createElement('a');\n    const jsonObjStr = JSON.stringify(resumeConfig, null, ' ');\n    const d = new Date();\n    const dateStr = `${d.getDay()}-${d.getDate()}-${d.getFullYear()}`;\n    element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(jsonObjStr));\n    element.setAttribute('download', `my-resume-${dateStr}.json`);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  };\n\n  const exportPDF = () => {\n    //@ts-ignore\n    resume.save();\n};\n\n  return (\n    <Grid>\n      <Cell size={4}>\n        <Card className=\"md-block-centered\">\n          <CardTitle title=\"Resume Template Builder\" subtitle=\"created by Raymond Ng\" />\n          <CardText>\n            <p>\n              a simple tool for laying and building out a resume template.\n            </p>\n          </CardText>\n        </Card>\n        <EditHeaderProfile\n          firstName={firstName}\n          setFirstNameState={setFirstNameState}\n          middleName={middleName}\n          setMiddleName={setMiddleName}\n          lastName={lastName}\n          setLastName={setLastName}\n          jobTitle={jobTitle}\n          setJobTitle={setJobTitle}\n        />\n        <EditProfessionalExperience\n          addExperience={addExperience}\n          removeExperience={removeExperience}\n          myExperienceList={professionalExperiences}\n          setExperience={setExperiences}\n        />\n        <EditSkills skills={skills} setSkills={setSkills} />\n        <RenderResumeConfig config={resumeConfig} />\n        <Button flat primary onClick={exportPDF}>Save PDF</Button>\n        <Button flat primary onClick={download}>Save JSON Config</Button>\n      </Cell>\n      <Cell size={8}>\n        <div style={{ border: '1px solid lightgrey', width: '816px', height: '1056px', margin: '0 auto' }}>\n          <PDFExport paperSize={'Letter'}\n            fileName={pdfFileName}\n            title=\"\"\n            subject=\"\"\n            keywords=\"resume\"\n            ref={(r: any) => resume = r}>\n                <div style={{\n                    height: '100%',\n                    width: '100%',\n                    padding: 'none',\n                    fontFamily: 'Helvetica; san-serif',\n                    backgroundColor: 'white',\n                    margin: 'auto',\n                    overflowX: 'hidden',\n                    overflowY: 'hidden'}}>\n                      <ResumePreview\n                        firstName={firstName}\n                        middleName={middleName}\n                        lastName={lastName}\n                        jobTitle={jobTitle}\n                        skills={skills}\n                        professionalExperiences={professionalExperiences}\n                      />\n                </div>\n          </PDFExport>\n        </div>\n      </Cell>\n    </Grid>\n  );\n};\n\nexport default Main;\n  ","import React from 'react';\nimport { NavigationDrawer } from 'react-md';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationDrawer drawerTitle=\"Navigation\">\n        <Main />\n      </NavigationDrawer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFontLoader from 'webfontloader';\n\nWebFontLoader.load({\n  google: {\n    families: ['Roboto:300,400,500,700', 'Material Icons'],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}